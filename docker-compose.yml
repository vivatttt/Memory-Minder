services:
  database:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_HOST=${DATABASE_HOST}
    command: postgres -p ${DATABASE_PORT}
    volumes:
      - ./app/db/data:/data
    networks:
      - internal-net
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
  memory_minder:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=${DATABASE_PORT}
      - BOT_API_TOKEN=${BOT_API_TOKEN}
      - ENV=${ENV}
      - PYTHONPATH=/memory_minder
      - ECHO_ENABLED=${ECHO_ENABLED}
      - YA_GPT_FOLDER_ID=${YA_GPT_FOLDER_ID}
      - YANDEX_CLOUD_OAUTH_TOKEN=${YANDEX_CLOUD_OAUTH_TOKEN}
      - YANDEX_CLOUD_SERVICE_ACCOUNT_API_KEY=${YANDEX_CLOUD_SERVICE_ACCOUNT_API_KEY}
      - GIGACHAT_API_KEY=${GIGACHAT_API_KEY}
    networks:
      - internal-net
    depends_on:
      - database

networks:
  internal-net:

  